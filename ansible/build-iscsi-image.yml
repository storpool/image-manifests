- name: Image base
  hosts: all
  become_method: sudo
  roles:
    - testing-lab/playbooks/roles/configure_timezone
    - testing-lab/playbooks/roles/configure_bash
    - testing-lab/playbooks/roles/configure_repositories
    - testing-lab/playbooks/roles/install_dependencies
    - storpool.install_sp_python
    - storpool.bootstrap_node

- name: Proxmox VE installation
  hosts: all
  become_method: sudo
  roles:
    - pve
  tags:
    - never
    - proxmox_ve

- name: Reboot hosts that requite so
  hosts: all
  become_method: sudo
  tasks:
    - name: Checking if EL host requires reboot
      become: yes
      ansible.builtin.command: /usr/bin/needs-restarting -r
      register: el_needs_restart
      failed_when: false
      changed_when: el_needs_restart.rc == 1
      notify: Reboot host
      when:
        - ansible_os_family == "RedHat"

    - name: Cheking if Debian host requires reboot
      become: yes
      ansible.builtin.shell: |
        [ ! -f /var/run/reboot-required ] || false
      register: deb_needs_restart
      failed_when: false
      changed_when: deb_needs_restart.rc == 1
      notify: Reboot host
      when:
        - ansible_os_family == "Debian"

  handlers:
    - name: Rebooting host
      become: yes
      ansible.builtin.reboot:
      listen: Reboot host

- name: Apply cloudinit dependent tasks
  hosts: all
  become_method: sudo
  roles:
    - testing-lab/playbooks/roles/configure_network
    - storpool_lab.configure_ssh

- name: Configure image for baremetal boot
  hosts: all
  become_method: sudo
  roles:
    - netcho.ironic_prepare
  tags:
    - ironic

- name: Configure image for baremetal iSCSI boot
  hosts: all
  become_method: sudo
  roles:
    - netcho.ironic_iscsi_boot
  tags:
    - ironic-iscsi

- name: Clean up cloud-init files and directories
  hosts: all
  become_method: sudo
  tasks:
    - name: Removing cloud-init seed directory
      become: true
      file:
        path: /var/lib/cloud
        state: absent

    - name: Removing cloud-init logs
      become: true
      file: 
        path: "/var/log/{{ filename }}"
        state: absent
      loop:
        - cloud-init.log
        - cloud-init-output.log
      loop_control:
        loop_var: filename

    - name: Resetting static hostname
      become: yes
      ansible.builtin.command: hostnamectl set-hostname "" --static

